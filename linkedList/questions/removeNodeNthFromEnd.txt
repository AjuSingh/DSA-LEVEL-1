/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
       if(head==null || (head.next==null&&n==1)){
           return null;
       }
        
       int len = 0;
        ListNode temp = head;
        while(temp!=null){
            temp = temp.next;
            len++;
        }
        //when we need to remove first node;
        if(len==n){
            return head.next;
        }
        
        
        temp = head;
        for(int i=1;i<len-n;i++){
            temp = temp.next;
        }
        
        temp.next = temp.next.next;
        return head;
    }
}


class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
      ListNode newNode = new ListNode();
      newNode.next = head;
      ListNode slow=newNode,fast=newNode;
      for(int i=1;i<=n;i++){
          fast = fast.next;
      }
        
      while(fast.next!=null){
          slow = slow.next;
          fast = fast.next;
      }
        
      slow.next = slow.next.next;
      return newNode.next;
    }
}